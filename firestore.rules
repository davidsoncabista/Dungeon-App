rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    // Verifica se o usuário tem a claim de 'admin' no seu token de autenticação.
    // Esta é a forma correta e performática de verificar permissões de administrador.
    function isAdmin() {
      return request.auth.token.admin == true;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // --- Regras para a Coleção de Usuários (`users`) ---
    match /users/{userId} {
      allow read: if request.auth != null;
      allow update: if request.auth.uid == userId || request.auth.token.admin == true;
      allow create: if request.auth.uid == userId;
      // Excluir usuários deve ser feito com cuidado, talvez apenas por administradores
      allow delete: if request.auth.token.admin == true;
    }

    // Coleção `rooms`
    // Permite que qualquer usuário autenticado leia as salas, mas apenas
    // administradores podem criar, editar ou excluir.
    match /rooms/{roomId} {
      // Qualquer usuário logado pode ler as salas.
      allow read: if request.auth != null;
      
      // Apenas administradores podem escrever/editar salas.
      // (Simplificado para usar a mesma claim de admin)
      allow write: if isAdmin();
    }

    // --- Regras para a Coleção de Reservas (`bookings`) ---
    match /bookings/{bookingId} {
<<<<<<< HEAD
      // Qualquer usuário logado pode ler as reservas (para a agenda).
=======
      allow read, create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.organizerId || request.auth.token.admin == true;
    }
    
    // Coleção `notices`
    // Permite que qualquer usuário autenticado leia avisos.
    // Apenas administradores podem criar, editar e excluir avisos.
    match /notices/{noticeId} {
        allow read: if request.auth != null;
        // Permite que usuários atualizem apenas o campo 'readBy'
        allow update: if request.auth.token.admin == true ||
                       (request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['readBy']));
        allow create, delete: if request.auth.token.admin == true;
    }

    // Coleção `plans`
    // Permite que qualquer usuário autenticado leia os planos.
    // Apenas administradores podem criar, editar ou excluir planos.
    match /plans/{planId} {
>>>>>>> d454f3b1 (rules_version = '2';)
      allow read: if request.auth != null;
      
      // Um usuário pode criar uma reserva se for o organizador.
      allow create: if request.resource.data.organizerId == request.auth.uid;
      
      // O organizador ou um admin pode atualizar/excluir a reserva.
      allow update, delete: if resource.data.organizerId == request.auth.uid || isAdmin();
    }
  }
}
