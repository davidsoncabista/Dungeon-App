rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- REGRAS GERAIS ---
    // Configurações do Sistema e Planos: Apenas administradores podem ler e escrever.
    match /systemSettings/{docId} {
      allow read, write: if request.auth.token.role == 'Administrador';
    }
    match /plans/{planId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.role == 'Administrador';
    }

    // --- REGRAS DE ACESSO (NOVO) ---
    // Apenas Administradores podem gerenciar as regras de acesso.
    match /accessRules/{ruleId} {
      allow read, write: if request.auth.token.role == 'Administrador';
    }
    
    // --- USUÁRIOS ---
    // Todos podem ler a lista de usuários, mas só o próprio usuário ou um admin pode editar.
    match /users/{userId} {
      allow read, list: if request.auth != null;
      allow update: if request.auth.uid == userId || request.auth.token.role == 'Administrador';
      // A criação é feita via Cloud Function (createUserDocument)
      allow create: if false; 
      // Apenas admins podem deletar
      allow delete: if request.auth.token.role == 'Administrador';
    }

    // --- SALAS ---
    // Todos podem ler as salas, mas só Editores e Admins podem modificar.
    match /rooms/{roomId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.role == 'Editor' || request.auth.token.role == 'Administrador';
    }

    // --- RESERVAS ---
    // Regras complexas para reservas.
    match /bookings/{bookingId} {
      // Leitura: Permitida para qualquer participante da reserva ou para administradores.
      allow read: if request.auth.uid in resource.data.participants || request.auth.token.role in ['Administrador', 'Editor', 'Revisor'];
      // Criação: Permitida para qualquer usuário autenticado (a lógica de cota é validada no frontend/função).
      allow create: if request.auth.uid == request.resource.data.organizerId;
      // Atualização: Permitida para o organizador ou para administradores/editores.
      allow update: if request.auth.uid == resource.data.organizerId 
                      || request.auth.token.role in ['Administrador', 'Editor']
                      || (request.auth.uid in resource.data.participants && request.resource.data.participants == resource.data.participants.removeAll([request.auth.uid])); // Permite sair da reserva
      // Exclusão: Permitida para o organizador ou para administradores/editores.
      allow delete: if request.auth.uid == resource.data.organizerId || request.auth.token.role in ['Administrador', 'Editor'];
    }

    // --- AVISOS ---
    // Todos podem ler. Apenas admins podem criar/editar/excluir.
    match /notices/{noticeId} {
        allow read: if request.auth != null;
        allow write: if request.auth.token.role == 'Administrador';
    }

    // --- MENSAGENS DIRETAS ---
    // Apenas o destinatário ou um admin podem ler. A criação é via Cloud Function.
    match /userMessages/{messageId} {
      allow read: if request.auth.uid == resource.data.recipientId || request.auth.token.role == 'Administrador';
      allow update: if request.auth.uid == resource.data.recipientId; // Para marcar como lida
      allow create, delete: if request.auth.token.role == 'Administrador';
    }
    
    // --- TRANSAÇÕES ---
    // Apenas o usuário dono da transação ou um admin podem ler.
    // A criação é via Cloud Function (mensalidades/taxas) ou por um admin.
    match /transactions/{transactionId} {
      allow read, list: if request.auth.uid == resource.data.userId || request.auth.token.role == 'Administrador';
      allow create, update: if request.auth.token.role == 'Administrador';
      allow delete: if false; // Evitar exclusão de histórico financeiro
    }
    
    // --- VOTAÇÕES ---
    match /polls/{pollId} {
      // Leitura permitida para todos os usuários logados.
      allow read, list: if request.auth != null;
      // Apenas admins podem criar, editar ou apagar votações.
      allow create, update, delete: if request.auth.token.role == 'Administrador';
      
      // Regras para a subcoleção de votos
      match /votes/{voteId} {
        // Ninguém pode listar todos os votos para garantir anonimato parcial.
        allow list: if false;
        // Leitura permitida apenas para o próprio votante ou para admins.
        allow read: if request.auth.uid == voteId || request.auth.token.role == 'Administrador';
        // Voto só pode ser criado pelo próprio usuário autenticado.
        allow create: if request.auth.uid == voteId;
        // Votos não podem ser alterados ou excluídos após enviados.
        allow update, delete: if false;
      }
    }
  }
}
