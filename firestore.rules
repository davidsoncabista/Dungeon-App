rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Funções de Ajuda ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth.token.admin == true;
    }

    function isEditorOrAdmin() {
        return request.auth.token.role == 'Editor' || request.auth.token.admin == true;
    }
    
    function isRevisorOrHigher() {
        return request.auth.token.role in ['Revisor', 'Editor', 'Administrador'];
    }
    
    function getUserData(userId) {
        return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // --- REGRAS DAS COLEÇÕES ---

    // USERS: 
    // - Todos podem ler a lista de usuários (para convidar para reservas).
    // - O próprio usuário pode atualizar seu perfil.
    // - Apenas administradores podem alterar 'role', 'status' ou 'category'.
    match /users/{userId} {
      allow read;
      allow create: if isSignedIn();
      allow update: if isOwner(userId) 
                    || isEditorOrAdmin();
      allow delete: if isAdmin();
    }

    // ROOMS:
    // - Todos os usuários autenticados podem ler as salas.
    // - Apenas Editores e Admins podem criar, editar ou excluir.
    match /rooms/{roomId} {
      allow read: if isSignedIn();
      allow write: if isEditorOrAdmin();
    }

    // BOOKINGS:
    // - Usuários autenticados podem ler as reservas.
    // - Usuários ativos podem criar reservas.
    // - O organizador ou um admin pode atualizar ou deletar a reserva.
    match /bookings/{bookingId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && getUserData(request.auth.uid).status == 'Ativo';
      allow update, delete: if isSignedIn() && (resource.data.organizerId == request.auth.uid || isAdmin());
    }

    // NOTICES (Avisos):
    // - Todos os usuários autenticados podem ler os avisos.
    // - Apenas administradores podem criar, editar ou excluir.
    match /notices/{noticeId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // TRANSACTIONS:
    // - O usuário pode ler apenas suas próprias transações.
    // - Administradores podem ler e escrever em todas as transações.
    match /transactions/{transactionId} {
        allow read: if isSignedIn() && (resource.data.userId == request.auth.uid || isAdmin());
        allow write: if isAdmin();
    }
    
    // USERMESSAGES:
    // - O usuário só pode ler as mensagens destinadas a ele.
    // - A escrita é feita apenas por Cloud Functions.
     match /userMessages/{messageId} {
      allow read: if isSignedIn() && resource.data.recipientId == request.auth.uid;
      allow write: if false; // Apenas backend (functions)
    }

    // PLANS & SYSTEM SETTINGS:
    // - Todos autenticados podem ler (para a UI de matrícula e regras de cota).
    // - Apenas administradores podem modificar.
    match /plans/{planId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
     match /systemSettings/{configId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    
    // --- REGRAS DE VOTAÇÃO ---
    match /polls/{pollId} {
      // Todos os usuários autenticados podem ler as votações para verificar elegibilidade.
      allow read: if isSignedIn();
      // Apenas administradores podem criar, editar ou excluir votações.
      allow write: if isAdmin();

      // Subcoleção de votos
      match /votes/{voteId} {
        // Um usuário só pode ler seu próprio voto para evitar que veja o voto de outros.
        allow read: if isSignedIn() && isOwner(voteId);
        // A escrita (voto) é controlada pela Cloud Function 'castVote'.
        allow write: if false;
      }
    }
  }
}
